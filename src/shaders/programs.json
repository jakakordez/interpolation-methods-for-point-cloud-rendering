{
    "phong": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "phong/phong_template.vert",
            "fragment": "phong/phong_template.frag"
        }
    },
    "phong-FLAT": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "phong/phong_template-FLAT.vert",
            "fragment": "phong/phong_template-FLAT.frag"
        }
    },

    "basic": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "basic/basic_template.vert",
            "fragment": "basic/basic_template.frag"
        }
    },
    "basic-FLAT": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "basic/basic_template-FLAT.vert",
            "fragment": "basic/basic_template-FLAT.frag"
        }
    },

    "basic_sprite": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "basic/basic_sprite_template.vert",
            "fragment": "basic/basic_sprite_template.frag"
        }
    },

    "basic_strip": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "basic/basic_strip_template.vert",
            "fragment": "basic/basic_strip_template.frag"
        }
    },

    "custom_testProgram": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "custom/testProgram_template.vert",
            "fragment": "custom/testProgram_template.frag"
        }
    },

    "custom_deferredGBuffer": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "custom/deferred/gBuffer_template.vert",
            "fragment": "custom/deferred/gBuffer_template.frag"
        }
    },

    "custom_deferredLightning": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "custom/deferred/lightning_template.vert",
            "fragment": "custom/deferred/lightning_template.frag"
        }
    },

    "custom_drawOnTexture": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "custom/drawToTexture/drawing_template.vert",
            "fragment": "custom/drawToTexture/drawing_template.frag"
        }
    },

    "custom_redrawOnTexture": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "custom/drawToTexture/redrawing_template.vert",
            "fragment": "custom/drawToTexture/redrawing_template.frag"
        }
    },

    "custom_copyTexture": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "custom/drawToTexture/copy_texture_template.vert",
            "fragment": "custom/drawToTexture/copy_texture_template.frag"
        }
    },

    "custom_overlayTextures": {
        "description": "Default gl2 program used for testing.",
        "shaders": {
            "vertex": "custom/overlay/overlayTextures.vert",
            "fragment": "custom/overlay/overlayTextures.frag"
        }
    },

    "basicVolume": {
        "description": "Default volume.",
        "shaders": {
            "vertex": "volume/volume_basic_template.vert",
            "fragment": "volume/volume_basic_template.frag"
        }
    },


    "colorPicker": {
        "description": "Color picker.",
        "shaders": {
            "vertex": "color_picker/color_picker.vert",
            "fragment": "color_picker/color_picker.frag"
        }
    },
    "custom_colorPicker_particle": {
        "description": "Color picker particle.",
        "shaders": {
            "vertex": "color_picker/color_picker_particle.vert",
            "fragment": "color_picker/color_picker_particle.frag"
        }
    },
    "custom_colorPicker_hit": {
        "description": "Color picker hit.",
        "shaders": {
            "vertex": "color_picker/color_picker_hit.vert",
            "fragment": "color_picker/color_picker_hit.frag"
        }
    },
    "custom_colorPicker_track_width": {
        "description": "Color picker TW.",
        "shaders": {
            "vertex": "color_picker/color_picker_track_width.vert",
            "fragment": "color_picker/color_picker_track_width.frag"
        }
    },
    "custom_colorPicker_POINTS": {
        "description": "Color picker POINTS.",
        "shaders": {
            "vertex": "color_picker/color_picker_POINTS.vert",
            "fragment": "color_picker/color_picker_POINTS.frag"
        }
    },
    "custom_colorPicker_TRIANGLES": {
        "description": "Color picker TRIANGLES.",
        "shaders": {
            "vertex": "color_picker/color_picker_TRIANGLES.vert",
            "fragment": "color_picker/color_picker_TRIANGLES.frag"
        }
    },
    "custom_colorPicker_strip": {
        "description": "Color picker Strip.",
        "shaders": {
            "vertex": "color_picker/color_picker_strip.vert",
            "fragment": "color_picker/color_picker_strip.frag"
        }
    },

    "custom_multi": {
        "description": "Multi.",
        "shaders": {
            "vertex": "custom/post_process/multi.vert",
            "fragment": "custom/post_process/multi.frag"
        }
    },
    "custom_outline": {
        "description": "Outline.",
        "shaders": {
            "vertex": "custom/post_process/outline.vert",
            "fragment": "custom/post_process/outline.frag"
        }
    },

    "custom_gaussBlur": {
        "description": "Gaussian Blur.",
        "shaders": {
            "vertex": "custom/post_process/gaussBlur.vert",
            "fragment": "custom/post_process/gaussBlur.frag"
        }
    },

    "custom_highPass": {
        "description": "High Pass Filter.",
        "shaders": {
            "vertex": "custom/post_process/highPass.vert",
            "fragment": "custom/post_process/highPass.frag"
        }
    },

    "custom_bloom": {
        "description": "Bloom.",
        "shaders": {
            "vertex": "custom/post_process/bloom.vert",
            "fragment": "custom/post_process/bloom.frag"
        }
    },


    "custom_initialParticle": {
        "description": "HEP initial particles.",
        "shaders": {
            "vertex": "hep/initial_particle.vert",
            "fragment": "hep/initial_particle.frag"
        }
    },
    "custom_hit": {
        "description": "HEP hits.",
        "shaders": {
            "vertex": "hep/hit.vert",
            "fragment": "hep/hit.frag"
        }
    },
    "custom_track": {
        "description": "HEP tracks.",
        "shaders": {
            "vertex": "hep/track.vert",
            "fragment": "hep/track.frag"
        }
    },
    "custom_track_width": {
        "description": "HEP tracks wide.",
        "shaders": {
            "vertex": "hep/track_width.vert",
            "fragment": "hep/track_width.frag"
        }
    },
    "custom_lambert": {
        "description": "HEP lambert.",
        "shaders": {
            "vertex": "hep/lambert.vert",
            "fragment": "hep/lambert.frag"
        }
    },


    "custom_volumeProject": {
        "description": "VPT volume.",
        "shaders": {
            "vertex": "VPT/volumeProject.vert",
            "fragment": "VPT/volumeProject.frag"
        }
    },

    "custom_pointcloud": {
        "description": "Pointcloud program",
        "shaders": {
            "vertex": "custom/pointcloud.vert",
            "fragment": "custom/pointcloud.frag"
        }
    },

    "custom_nearestNeighbour": {
        "description": "Pointcloud nearest neighbour program",
        "shaders": {
            "vertex": "custom/postprocess.vert",
            "fragment": "custom/nearestNeighbour.frag"
        }
    },

    "custom_weightedDistance": {
        "description": "Pointcloud weighted distance program",
        "shaders": {
            "vertex": "custom/postprocess.vert",
            "fragment": "custom/weightedDistance.frag"
        }
    },

    "custom_naturalNeighbour": {
        "description": "Pointcloud natural neighbour program",
        "shaders": {
            "vertex": "custom/postprocess.vert",
            "fragment": "custom/naturalNeighbour.frag"
        }
    },

    "custom_jumpFlooding": {
        "description": "Pointcloud jump flooding program",
        "shaders": {
            "vertex": "custom/postprocess.vert",
            "fragment": "custom/jumpFlooding.frag"
        }
    },

    "custom_jumpFloodingFinal": {
        "description": "Pointcloud jump flooding final program",
        "shaders": {
            "vertex": "custom/postprocess.vert",
            "fragment": "custom/jumpFloodingFinal.frag"
        }
    },

    "custom_jumpFloodingLayers": {
        "description": "Pointcloud jump flooding layers program",
        "shaders": {
            "vertex": "custom/postprocess.vert",
            "fragment": "custom/jumpFloodingLayers.frag"
        }
    },
    "custom_jumpFloodingLayersPrep": {
        "description": "Pointcloud jump flooding layers preparation program",
        "shaders": {
            "vertex": "custom/postprocess.vert",
            "fragment": "custom/jumpFloodingLayersPrep.frag"
        }
    },
    "custom_jumpFloodingLayersFinal": {
        "description": "Pointcloud jump flooding layers final program",
        "shaders": {
            "vertex": "custom/postprocess.vert",
            "fragment": "custom/jumpFloodingLayersFinal.frag"
        }
    },

    "custom_weightedDistanceSplats": {
        "description": "Pointcloud weighted distance with splats program",
        "shaders": {
            "vertex": "custom/postprocess.vert",
            "fragment": "custom/weightedDistanceSplats.frag"
        }
    
    }
}